<Window x:Class="BaselinkerSubiektConnector.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:control="clr-namespace:NexoLink"
        mc:Ignorable="d"        
        Title="NexoLink" Height="800" Width="1200">

    <Window.Resources>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />


        <Style x:Key="DataGridCellStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="5"/>
        </Style>

    </Window.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0">
            <DockPanel LastChildFill="True">
                <WrapPanel DockPanel.Dock="Top" Orientation="Horizontal">
                    <TextBlock Padding="4" Margin="8" FontSize="14" >
                    <Run Text="Wersja Sfery:" />
                    <Run Text="{Binding WersjaSfery, Mode=OneTime}" />
                    </TextBlock>

                    <TextBlock Padding="4" Margin="8" FontSize="14" 
                           Visibility="{Binding CzyJestBaza, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Run Text="Baza:" />
                    <Run Text="{Binding Baza, Mode=OneWay}" />
                    </TextBlock>
                </WrapPanel>

                <Ellipse DockPanel.Dock="Left" Width="25" Height="25" Margin="8 8 2 8">
                    <Ellipse.Style>
                        <Style TargetType="{x:Type Ellipse}">
                            <Setter Property="Fill" Value="Red" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CzyTrwaUruchamianieSfery}" Value="True">
                                    <Setter Property="Fill" Value="Gray" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CzySferaJestUruchomiona}" Value="True">
                                    <Setter Property="Fill" Value="Green" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Ellipse.Style>
                </Ellipse>


                <Button DockPanel.Dock="Right" 
                    Margin="4 8 8 8" Padding="8 4"
                    FontSize="14"
                    Content="Uruchom prace" 
                    x:Name="ButtonEnableDisableApp"
                    Click="PolaczButton_Click">
                </Button>

                <TextBlock DockPanel.Dock="Left" 
                       Padding="4" Margin="2 8 4 8"
                       FontSize="14" FontWeight="SemiBold">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Text" Value="Nie ma połączenia ze Sferą" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CzyTrwaUruchamianieSfery}" Value="True">
                                    <Setter Property="Text" Value="Trwa łączenie ze Sferą" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CzySferaJestUruchomiona}" Value="True">
                                    <Setter Property="Text" Value="Połączenie ze Sferą jest aktywne" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </DockPanel>


            <DockPanel LastChildFill="True">
                <Ellipse DockPanel.Dock="Left" Width="25" Height="25" Margin="8 8 2 8" x:Name="HttpServiceEnabledIcon">
                    <Ellipse.Style>
                        <Style TargetType="{x:Type Ellipse}">
                            <Setter Property="Fill" Value="Silver" />
                        </Style>
                    </Ellipse.Style>
                </Ellipse>

                <TextBlock DockPanel.Dock="Left" 
               Padding="4" Margin="2 8 4 8"
               FontSize="14" FontWeight="SemiBold" x:Name="HttpServiceEnabled" Text="Serwer HTTP wyłączony">
                </TextBlock>

                <Rectangle DockPanel.Dock="Left" Width="560"/>
                <CheckBox DockPanel.Dock="Right" x:Name="SferaAutoRun" VerticalContentAlignment="Center" Padding="4" Margin="2 8 4 8" FontSize="14" FontWeight="SemiBold" Content="Uruchamiaj sfere automatycznie po uruchomieniu aplikacji."/>
            </DockPanel>

            <Grid Visibility="{Binding CzyTrwaUruchamianieSfery, Converter={StaticResource BooleanToVisibilityConverter}}"
              Margin="12 8" Height="25">

                <ProgressBar Visibility="{Binding CzyTrwaUruchamianieSfery, Converter={StaticResource BooleanToVisibilityConverter}}"
                         IsIndeterminate="False" Minimum="0" Maximum="100" Value="{Binding PostepLadowania.BiezacyProcent}" 
                         Background="LightGray" />

                <TextBlock Text="{Binding PostepLadowania.Opis}"                    
                       FontSize="14" FontWeight="SemiBold"
                       Padding="4" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Grid>

        </StackPanel>

        <TabControl Grid.Row="1">
            <TabItem Header="Dokumenty sprzedaży">

                <TabControl>
                    <TabItem Header="Lista dokumentów">
                        <control:SalesViewControl />
                    </TabItem>
                    <TabItem Header="Lista zamówień Baselinker">
                        <control:BaselinkerOrderList />
                    </TabItem>
                </TabControl>
            </TabItem>
            <TabItem Header="Asortyment">
                <TabControl>
                    <TabItem Header="Lista asortymentów">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="500"/>
                            </Grid.RowDefinitions>

                            <Button Content="Odśwież" Click="RefreshButton_Click" Grid.Row="0" HorizontalAlignment="Right" Margin="0,0,0,0" Width="100"/>

                            <TextBlock x:Name="AssortmentsTableProductsNotFound" Visibility="Hidden" Grid.Row="1" Text="Nie znaleziono żadnych brakujących produktów. Upewnij się, że masz zsynchronizowane dane w zakładce 'Aktualizacja danych'."></TextBlock>
                            <DataGrid x:Name="AssortmentsTable" AutoGenerateColumns="False" Grid.Column="0" Grid.Row="1" IsReadOnly="True"
                                VirtualizingStackPanel.IsVirtualizing="True" PreviewMouseWheel="AssortmentsTable_PreviewMouseWheel"
                                PreviewMouseRightButtonDown="AssortmentsTable_PreviewMouseRightButtonDown"
                                SelectionUnit="Cell">
                                <DataGrid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Kopiuj" Click="AssortmentsCopyMenuItem_Click" />

                                    </ContextMenu>
                                </DataGrid.ContextMenu>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Identyfikator Baselinker" Binding="{Binding BaselinkerId}" 
                                Width="*" ElementStyle="{StaticResource DataGridCellStyle}"/>
                                    <DataGridTextColumn Header="Nazwa Baselinker" Binding="{Binding BaselinkerName}" 
                                Width="*" ElementStyle="{StaticResource DataGridCellStyle}"/>
                                    <DataGridTextColumn Header="Kod kreskowy" Binding="{Binding Barcode}" 
                                Width="*" ElementStyle="{StaticResource DataGridCellStyle}"/>
                                    <DataGridTextColumn Header="Subiekt Symbol" Binding="{Binding SubiektSymbol}" 
                                Width="*" ElementStyle="{StaticResource DataGridCellStyle}"/>
                                    <DataGridTextColumn Header="Subiekt Nazwa" Binding="{Binding SubiektName}" 
                                Width="*" ElementStyle="{StaticResource DataGridCellStyle}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Brakujące w Baselinker">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="500"/>
                            </Grid.RowDefinitions>

                            <Button Content="Wyszukaj asortymentów" Click="SearchMissingProductInBaselinker_Click" Grid.Row="0" HorizontalAlignment="Right" Margin="0,0,0,0" Width="180"/>
                            <TextBlock x:Name="MissingBaselinkerProductsNotFound" Visibility="Hidden" Grid.Row="1" Text="Nie znaleziono żadnych brakujących w Baselinker produktów."></TextBlock>
                            <DataGrid x:Name="MissingBaselinkerProducts" AutoGenerateColumns="False" Grid.Column="0" Grid.Row="1" IsReadOnly="True"
          VirtualizingStackPanel.IsVirtualizing="True" Visibility="Hidden" SelectionUnit="Cell"
          PreviewMouseRightButtonDown="MissingBaselinkerProducts_PreviewMouseRightButtonDown">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Kod kreskowy" Binding="{Binding Barcode}" Width="*" ElementStyle="{StaticResource DataGridCellStyle}"/>
                                    <DataGridTextColumn Header="Symbol asortymentu" Binding="{Binding SubiektSymbol}" Width="*" ElementStyle="{StaticResource DataGridCellStyle}"/>
                                    <DataGridTextColumn Header="Nazwa asortymentu" Binding="{Binding SubiektName}" Width="*" ElementStyle="{StaticResource DataGridCellStyle}"/>
                                    <DataGridTemplateColumn Width="*">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Content="Dodaj do Baselinker" Click="AddMissingProductToBaselinker_Click"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                                <DataGrid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Kopiuj" Click="MissingBaselinkerProductsCopyMenuItem_Click" />

                                    </ContextMenu>
                                </DataGrid.ContextMenu>
                            </DataGrid>


                        </Grid>
                    </TabItem>
                    <TabItem Header="Synchronizacja stanu magazynowego">

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="200"/>
                                <RowDefinition Height="250"/>
                            </Grid.RowDefinitions>

                            <Border BorderBrush="#007bff" BorderThickness="1" Grid.Row="0"  Background="#f8f9fa" CornerRadius="5" Margin="20">
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Margin="20" Width="500">
                                    <TextBlock Text="Synchronizacja jednorazowa" FontWeight="Bold" FontSize="16" Margin="0,0,0,10"/>
                                    <TextBlock Text="Aktualizuj bieżący stan magazynowy poprzez jednorazową synchronizację z różnymi źródłami danych. Zalecana opcja do pierwszej pełnej synchronizacji lub dużych zmianach w magazynie." TextWrapping="Wrap" Margin="0,0,0,20"/>
                                    <Button Content="Synchronizuj teraz" x:Name="SyncInventoriesProductsStock"  Click="SyncInventoriesProductsStock_Click" HorizontalAlignment="Center" Padding="10,5" Width="300" Background="#007bff" Foreground="White" FontWeight="Bold"/>

                                </StackPanel>
                            </Border>

                            <Border BorderBrush="#007bff" BorderThickness="1" Grid.Row="1" Background="#f8f9fa" CornerRadius="5" Margin="20">
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Margin="20" Width="500">
                                    <TextBlock Text="Harmonogram synchronizacji" FontWeight="Bold" FontSize="16" Margin="0,0,0,10"/>
                                    <TextBlock Text="Aktualizuj bieżący stan magazynowy poprzez harmonogramową synchronizację z różnymi źródłami danych." TextWrapping="Wrap" Margin="0,0,0,10"/>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                        <TextBlock Text="Interwał synchronizacji (w minutach): " VerticalAlignment="Center"/>
                                        <ComboBox x:Name="IntervalSyncComboBox" SelectionChanged="IntervalSyncComboBox_SelectionChanged" Width="100" VerticalAlignment="Center">
                                            <ComboBoxItem Content="0"/>
                                        </ComboBox>
                                    </StackPanel>
                                    <CheckBox x:Name="AutoSyncCheckbox" Content="Uruchamiaj synchronizację automatycznie po uruchomieniu aplikacji" Checked="AutoSyncChecked" Unchecked="AutoSyncUnchecked" Margin="0,0,0,10"/>

                                    <Button Content="Uruchom serwis" x:Name="StartStopServiceSyncButton" Click="StartStopServiceSyncButton_Click" HorizontalAlignment="Center" Padding="10,5" Width="300" Background="#007bff" Foreground="White" FontWeight="Bold" IsEnabled="False"/>
                                </StackPanel>
                            </Border>

                        </Grid>
                    </TabItem>
                    <TabItem Header="Aktualizacja danych">

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="200"/>
                                <RowDefinition Height="200"/>
                            </Grid.RowDefinitions>

                            <Border BorderBrush="#007bff" BorderThickness="1" Grid.Row="0"  Background="#f8f9fa" CornerRadius="5" Margin="20">
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Margin="20" Width="500">
                                    <TextBlock Text="Aktualizacja magazynów, kategorii, grup cenowych i katalogów" FontWeight="Bold" FontSize="16" Margin="0,0,0,10"/>
                                    <TextBlock Text="Funkcjonalność odświeża dane dostępnych w Baselinker katalogów, hurtowni, magazynów, kategorii, grup cenowych. Zalecane jest wykonywanie raz na jakiś czas." TextWrapping="Wrap" Margin="0,0,0,20"/>
                                    <Button Content="Aktualizuj dane z Baselinker" x:Name="assortmentsBaselinkerRefreshDataButton"  Click="AssortmentsBaselinkerRefreshDataButton_Click" HorizontalAlignment="Center" Padding="10,5" Width="300" Background="#007bff" Foreground="White" FontWeight="Bold"/>

                                </StackPanel>
                            </Border>

                            <Border BorderBrush="#007bff" BorderThickness="1" Grid.Row="1" Background="#f8f9fa" CornerRadius="5" Margin="20">
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Margin="20" Width="500">
                                    <TextBlock Text="Aktualizacja asortymentu z Baselinker" FontWeight="Bold" FontSize="16" Margin="0,0,0,10"/>
                                    <TextBlock Text="Aby rozpocząć pracę z synchronizacją stanów magazynowych wymagane jest pobranie asortymentu z Baselinker" TextWrapping="Wrap" Margin="0,0,0,20"/>
                                    <Button Content="Aktualizuj/pobierz z Baselinker" x:Name="assortmentsBaselinkerSyncButton"  Click="AssortmentsBaselinkerSyncButton_ClickAsync" HorizontalAlignment="Center" Padding="10,5" Width="300" Background="#007bff" Foreground="White" FontWeight="Bold"/>
                                    <TextBlock x:Name="assortments_BaselinkerSyncProgressText" Text="Trwa aktualizacja..." Grid.Row="1" HorizontalAlignment="Center" Margin="5,0" Visibility="Collapsed"/>
                                </StackPanel>
                            </Border>
                        </Grid>
                    </TabItem>
                </TabControl>
            </TabItem>


            <TabItem Header="Edycja szablonu e-mail">
                <Grid>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <TextBox x:Name="EmailTemplate" TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Visible" Margin="0" Height="450"/>
                    </Grid>

                    <Button Content="Zapisz szablon" Click="EmailTemplate_Click" Grid.Row="1" Margin="10" Padding="10"/>
                </Grid>

            </TabItem>



            <TabItem Header="Logi">
                <Grid Height="600">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <TextBox Name="logTextBox" IsReadOnly="True" TextWrapping="Wrap"/>
                    </ScrollViewer>
                    <TextBlock Name="noLogsTextBlock" Text="Nie znaleziono żadnych logów" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed"/>
                </Grid>

            </TabItem>

            <TabItem Header="Konfiguracja programu">

                <control:ConfigurationControl />
            </TabItem>

            <TabItem Header="O programie">
                <Grid Background="White">
                   <Image Source="Assets/nexolink.jpg" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" Width="200" Height="200"/>

                    <TextBlock FontSize="24" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,400,0,0">
                    <Run Text="Wsparcie techniczne: "/>
                    <Hyperlink NavigateUri="mailto:pomoc@nexolink.pl" RequestNavigate="Hyperlink_RequestNavigate">
                        <Run Text="pomoc@nexolink.pl"/>
                    </Hyperlink>
                    </TextBlock>

                   <TextBlock FontSize="24" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,370,0,0">
                    <Run Text="Adres URL: "/>
                    <Hyperlink NavigateUri="https://nexolink.pl" RequestNavigate="Hyperlink_RequestNavigate">
                        <Run Text="https://nexolink.pl"/>
                    </Hyperlink>
                    </TextBlock>
                </Grid>

            </TabItem>
        </TabControl>
    </Grid>

</Window>
